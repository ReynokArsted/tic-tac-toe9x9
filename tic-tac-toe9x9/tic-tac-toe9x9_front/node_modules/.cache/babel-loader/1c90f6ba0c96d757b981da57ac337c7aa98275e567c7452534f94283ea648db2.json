{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx\";\nimport { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { PostContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TopicDis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Post\n      ID: \"\",\n      Title: \"\",\n      Content: \"\",\n      Author: \"\",\n      PostError: \"\",\n      PostLoading: true,\n      // Comments\n      CommentsList: [],\n      Total: 0,\n      PageSize: 0,\n      Page: 1,\n      ComLoading: true,\n      ComError: \"\",\n      ShowCommentField: false\n    };\n    this.updateData = () => {\n      console.log(this.context);\n      this.setState({\n        ID: this.context.PostID,\n        Title: this.context.PostTitle,\n        Author: this.context.PostAuthor,\n        Content: this.context.PostContent\n      });\n    };\n    this.fetchData = async () => {\n      const {\n        Page,\n        ID\n      } = this.state;\n      try {\n        const response = await fetch(`http://localhost:9091/getComments?page=${Page}&post_id=${ID}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const textResponse = await response.text(); // Получаем текст ответа\n        console.log(\"Ответ от API (непарсированный):\", textResponse);\n        /*\n                    const result = await response.json()\n                    if (result.error !== \"\") {\n                        this.setState({ComError : result.error})\n                    } else {\n                        this.setState({\n                            CommentsList: result.comments,\n                            Total: result.total,\n                            PageSize: result.page_size,\n                            Page: result.page,\n                            ComError: \"\",\n                            ComLoading: false\n                        })\n                    }            \n                    console.log(\"Ответ от API:\", result);\n        */\n      } catch (error) {\n        console.error(\"Ошибка:\", error);\n      }\n    };\n    this.showComField = () => {\n      this.setState({\n        ShowCommentField: !this.state.ShowCommentField\n      });\n    };\n  }\n  componentDidMount() {\n    this.updateData();\n    this.fetchData();\n  }\n  componentWillUnmount() {\n    const {\n      setPosID,\n      setTitle,\n      setContent,\n      setAuthor\n    } = this.context;\n    setPosID(\"\");\n    setTitle(\"\");\n    setContent(\"\");\n    setAuthor(\"\");\n  }\n  render() {\n    const {\n      Content,\n      PostLoading,\n      ComLoading,\n      PostError,\n      ComError,\n      Title,\n      Author,\n      CommentsList,\n      ShowCommentField,\n      showComField\n    } = this.state;\n    if (PostLoading || ComLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }, this);\n    }\n    if (PostError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", PostError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }, this);\n    }\n    if (ComError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", ComError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: Content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), ShowCommentField === true, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showComField,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        data: CommentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forum\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nTopicDis.contextType = PostContext;","map":{"version":3,"names":["Component","Comments","PostContext","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicDis","constructor","args","state","ID","Title","Content","Author","PostError","PostLoading","CommentsList","Total","PageSize","Page","ComLoading","ComError","ShowCommentField","updateData","console","log","context","setState","PostID","PostTitle","PostAuthor","PostContent","fetchData","response","fetch","method","headers","textResponse","text","error","showComField","componentDidMount","componentWillUnmount","setPosID","setTitle","setContent","setAuthor","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","data","to","contextType"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { PostContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\n\nexport class TopicDis extends Component {\n    state = {\n        // Post\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        PostError: \"\",\n        PostLoading: true,\n        // Comments\n        CommentsList: [],\n        Total: 0,\n        PageSize: 0,\n        Page: 1,\n        ComLoading: true,\n        ComError: \"\",\n        ShowCommentField: false\n    }\n\n    static contextType = PostContext\n\n    componentDidMount() {\n        this.updateData()\n        this.fetchData()\n    }\n\n    componentWillUnmount() {\n        const {setPosID, setTitle, setContent, setAuthor} = this.context\n        setPosID(\"\")\n        setTitle(\"\")\n        setContent(\"\")\n        setAuthor(\"\")\n    }\n\n    updateData = () => {\n            console.log(this.context)\n            this.setState({\n                ID: this.context.PostID,\n                Title: this.context.PostTitle,\n                Author: this.context.PostAuthor,\n                Content: this.context.PostContent,\n            })\n    }\n\n    fetchData = async () => {\n        const {Page, ID} = this.state\n        try {\n            const response = await fetch(`http://localhost:9091/getComments?page=${Page}&post_id=${ID}`, {\n                method: 'GET', \n                headers: {\n                    'Content-Type': 'application/json', \n                },\n            })\n\n            const textResponse = await response.text(); // Получаем текст ответа\n            console.log(\"Ответ от API (непарсированный):\", textResponse);\n/*\n            const result = await response.json()\n            if (result.error !== \"\") {\n                this.setState({ComError : result.error})\n            } else {\n                this.setState({\n                    CommentsList: result.comments,\n                    Total: result.total,\n                    PageSize: result.page_size,\n                    Page: result.page,\n                    ComError: \"\",\n                    ComLoading: false\n                })\n            }            \n            console.log(\"Ответ от API:\", result);\n*/\n            } catch (error) {\n                console.error(\"Ошибка:\", error);\n            }\n    }\n\n    showComField = () => {\n        this.setState({\n            ShowCommentField: !this.state.ShowCommentField\n        })\n    }\n\n    render() {\n            const {Content, PostLoading, ComLoading, \n                PostError, ComError, Title, Author, \n                CommentsList, ShowCommentField, showComField} = this.state;\n\n        if (PostLoading || ComLoading) {\n            return <p>Загрузка...</p>;\n        }\n\n        if (PostError) {\n            return <p>Ошибка: {PostError}</p>;\n        }\n        if (ComError) {\n            return <p>Ошибка: {ComError}</p>;\n        }\n\n        return (\n            <>\n                <h1>{Title}</h1>\n                <div className=\"text\">\n                    {Content}\n                </div>\n                <div>\n                    {Author}\n                </div>\n                {ShowCommentField === true}\n                <button onClick={showComField}>Добавить коментарий</button>\n                <Comments data={CommentsList}/>\n                <Link to=\"/forum\"><button>Назад</button></Link>\n            </>\n        )\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}