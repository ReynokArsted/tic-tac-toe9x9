{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx\";\nimport { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { AppContext, PostContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TopicDis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Post\n      ID: \"\",\n      Title: \"\",\n      Content: \"\",\n      Author: \"\",\n      PostError: \"\",\n      PostLoading: true,\n      // Comments\n      CommentsList: [],\n      Total: 0,\n      PageSize: 0,\n      Page: 1,\n      ComLoading: true,\n      ComError: \"\",\n      ShowCommentField: false\n    };\n    this.updateData = () => {\n      //console.log(this.context)\n      this.setState({\n        ID: this.context.PostID,\n        Title: this.context.PostTitle,\n        Author: this.context.PostAuthor,\n        Content: this.context.PostContent\n      });\n    };\n    this.fetchData = async () => {\n      const {\n        Page,\n        ID\n      } = this.state;\n      try {\n        const response = await fetch(`http://localhost:9091/getComments?page=${Page}&post_id=${ID}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${this.context.UserToken}`\n          }\n        });\n        const textResponse = await response.text(); // Получаем текст ответа\n        console.log(\"Ответ от API (непарсированный):\", textResponse);\n        /*\n                    const result = await response.json()\n                    if (result.error !== \"\") {\n                        this.setState({ComError : result.error})\n                    } else {\n                        this.setState({\n                            CommentsList: result.comments,\n                            Total: result.total,\n                            PageSize: result.page_size,\n                            Page: result.page,\n                            ComError: \"\",\n                            ComLoading: false\n                        })\n                    }            \n                    console.log(\"Ответ от API:\", result);\n        */\n      } catch (error) {\n        console.error(\"Ошибка:\", error);\n      }\n    };\n    this.showComField = () => {\n      this.setState({\n        ShowCommentField: !this.state.ShowCommentField\n      });\n    };\n    this.resetPostContext = e => {\n      const {\n        setPosID,\n        setTitle,\n        setContent,\n        setAuthor\n      } = this.context;\n      setPosID(\"\");\n      setTitle(\"\");\n      setContent(\"\");\n      setAuthor(\"\");\n    };\n  }\n  componentDidMount() {\n    console.log(this.context);\n    this.updateData();\n    this.fetchData();\n  }\n  componentWillUnmount() {\n    const {\n      setPosID,\n      setTitle,\n      setContent,\n      setAuthor\n    } = this.context;\n    setPosID(\"\");\n    setTitle(\"\");\n    setContent(\"\");\n    setAuthor(\"\");\n  }\n  render() {\n    const {\n      Content,\n      PostLoading,\n      ComLoading,\n      PostError,\n      ComError,\n      Title,\n      Author,\n      CommentsList,\n      ShowCommentField,\n      showComField,\n      resetPostContext\n    } = this.state;\n\n    //if (PostLoading || ComLoading) {\n    //    return <p>Загрузка...</p>;\n    //}\n\n    if (PostError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", PostError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this);\n    }\n    if (ComError) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", ComError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: Content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), ShowCommentField === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"large-text\",\n          name: \"Content\",\n          onChange: e => this.Update(e),\n          placeholder: \"\\u0422\\u0443\\u0442 \\u043C\\u043E\\u0436\\u043D\\u043E \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043E \\u0441\\u0432\\u043E\\u0438\\u0445 \\u0438\\u0434\\u0435\\u044F\\u0445 \\u0438\\u043B\\u0438 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u043F\\u0440\\u0435\\u0434\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u044F\\u0445\",\n          rows: 10 // Высота в строках\n          ,\n          cols: 45 // Ширина в символах\n          ,\n          style: {\n            width: '100%',\n            // Устанавливает ширину в процентах относительно родителя\n            minHeight: '150px',\n            // Минимальная высота\n            padding: '10px',\n            // Внутренний отступ\n            border: '1px solid #ccc',\n            // Граница\n            borderRadius: '4px',\n            // Закругление углов\n            fontSize: '16px',\n            // Размер шрифта\n            lineHeight: '1.5',\n            // Межстрочный интервал\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u0423\\u0431\\u0440\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => showComField(a),\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => showComField(e),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        data: CommentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: e => resetPostContext(e),\n        to: \"/forum\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nTopicDis.contextType1 = AppContext;\nTopicDis.contextType2 = PostContext;","map":{"version":3,"names":["Component","Comments","AppContext","PostContext","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicDis","constructor","args","state","ID","Title","Content","Author","PostError","PostLoading","CommentsList","Total","PageSize","Page","ComLoading","ComError","ShowCommentField","updateData","setState","context","PostID","PostTitle","PostAuthor","PostContent","fetchData","response","fetch","method","headers","UserToken","textResponse","text","console","log","error","showComField","resetPostContext","e","setPosID","setTitle","setContent","setAuthor","componentDidMount","componentWillUnmount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","name","onChange","Update","placeholder","rows","cols","style","width","minHeight","padding","border","borderRadius","fontSize","lineHeight","margin","onClick","a","data","to","contextType1","contextType2"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { AppContext, PostContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\n\nexport class TopicDis extends Component {\n    state = {\n        // Post\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        PostError: \"\",\n        PostLoading: true,\n        // Comments\n        CommentsList: [],\n        Total: 0,\n        PageSize: 0,\n        Page: 1,\n        ComLoading: true,\n        ComError: \"\",\n        ShowCommentField: false\n    }\n\n    static contextType1 = AppContext\n    static contextType2 = PostContext\n\n    componentDidMount() {\n        console.log(this.context)\n        this.updateData()\n        this.fetchData()\n    }\n\n    componentWillUnmount() {\n        const {setPosID, setTitle, setContent, setAuthor} = this.context\n        setPosID(\"\")\n        setTitle(\"\")\n        setContent(\"\")\n        setAuthor(\"\")\n    }\n\n    updateData = () => {\n            //console.log(this.context)\n            this.setState({\n                ID: this.context.PostID,\n                Title: this.context.PostTitle,\n                Author: this.context.PostAuthor,\n                Content: this.context.PostContent,\n            })\n    }\n\n    fetchData = async () => {\n        const {Page, ID} = this.state\n        try {\n            const response = await fetch(`http://localhost:9091/getComments?page=${Page}&post_id=${ID}`, {\n                method: 'GET', \n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization' : `Bearer ${this.context.UserToken}`\n                },\n            })\n\n            const textResponse = await response.text(); // Получаем текст ответа\n            console.log(\"Ответ от API (непарсированный):\", textResponse);\n/*\n            const result = await response.json()\n            if (result.error !== \"\") {\n                this.setState({ComError : result.error})\n            } else {\n                this.setState({\n                    CommentsList: result.comments,\n                    Total: result.total,\n                    PageSize: result.page_size,\n                    Page: result.page,\n                    ComError: \"\",\n                    ComLoading: false\n                })\n            }            \n            console.log(\"Ответ от API:\", result);\n*/\n            } catch (error) {\n                console.error(\"Ошибка:\", error);\n            }\n    }\n\n    showComField = () => {\n        this.setState({\n            ShowCommentField: !this.state.ShowCommentField\n        })\n    }\n\n    resetPostContext = (e) => {\n        const {setPosID, setTitle, setContent, setAuthor} = this.context\n        setPosID(\"\")\n        setTitle(\"\")\n        setContent(\"\")\n        setAuthor(\"\")\n    }\n\n    render() {\n            const {Content, PostLoading, ComLoading, \n                PostError, ComError, Title, Author, \n                CommentsList, ShowCommentField, showComField, resetPostContext} = this.state;\n\n        //if (PostLoading || ComLoading) {\n        //    return <p>Загрузка...</p>;\n        //}\n\n        if (PostError) {\n            return <p>Ошибка: {PostError}</p>;\n        }\n        if (ComError) {\n            return <p>Ошибка: {ComError}</p>;\n        }\n\n        return (\n            <>\n                <h1>{Title}</h1>\n                <div className=\"text\">\n                    {Content}\n                </div>\n                <div>\n                    {Author}\n                </div>\n                {ShowCommentField === true ? \n                <>\n                    <textarea \n                    id=\"large-text\"\n                    name=\"Content\"\n                    onChange={(e) => this.Update(e)}\n                    placeholder=\"Тут можно написать о своих идеях или других предложениях\"\n                    rows={10} // Высота в строках\n                    cols={45} // Ширина в символах\n                    style={{\n                        width: '100%', // Устанавливает ширину в процентах относительно родителя\n                        minHeight: '150px', // Минимальная высота\n                        padding: '10px', // Внутренний отступ\n                        border: '1px solid #ccc', // Граница\n                        borderRadius: '4px', // Закругление углов\n                        fontSize: '16px', // Размер шрифта\n                        lineHeight: '1.5', // Межстрочный интервал\n                        margin: \"10px\"\n                    }}\n                    />\n                    <button>Убрать поле</button>\n                    <button onClick={(e) => showComField(a)}>Отправить</button>\n                </>\n                : \n                <button onClick={(e) => showComField(e)}>Добавить коментарий</button>\n                }\n                <Comments data={CommentsList}/>\n                <Link onClick={(e) => resetPostContext(e)} to=\"/forum\"><button>Назад</button></Link>\n            </>\n        )\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}