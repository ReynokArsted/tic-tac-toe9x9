{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Game/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './Board';\nimport { checkWinner } from './helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null).map(() => Array(9).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [activeMiniBoard, setActiveMiniBoard] = useState(null);\n  const [finishedMiniBoards, setFinishedMiniBoards] = useState([]);\n  const [scores, setScores] = useState({\n    X: 0,\n    O: 0\n  });\n  const [winner, setWinner] = useState(null);\n  const handleSquareClick = (miniBoardIndex, squareIndex) => {\n    if (winner) return;\n    if (finishedMiniBoards.includes(miniBoardIndex)) {\n      if (activeMiniBoard !== null) return;\n    }\n    const nextBoard = board.map((miniboard, mbIndex) => {\n      if (mbIndex !== miniBoardIndex) return miniboard;\n      return miniboard.map((value, sIndex) => {\n        if (sIndex === squareIndex && value === null) return currentPlayer;\n        return value;\n      });\n    });\n    setBoard(nextBoard);\n\n    // Проверка на победу в поле 3x3\n    const miniBoardWinner = checkWinner(nextBoard[miniBoardIndex]);\n    if (miniBoardWinner) {\n      setFinishedMiniBoards(prev => [...prev, miniBoardIndex]);\n      setScores(prevScores => ({\n        ...prevScores,\n        [currentPlayer]: prevScores[currentPlayer] + 1\n      }));\n    }\n    const nextActiveMiniBoard = finishedMiniBoards.includes(squareIndex) ? null : squareIndex;\n    setActiveMiniBoard(nextActiveMiniBoard);\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  };\n  useEffect(() => {\n    const overallWinner = checkWinner(finishedMiniBoards);\n    if (overallWinner) {\n      setWinner(overallWinner);\n    }\n  }, [finishedMiniBoards]);\n  const renderGameStatus = () => {\n    if (winner) {\n      return `Победитель: ${winner}`;\n    } else if (finishedMiniBoards.length === 9) {\n      return `Ничья`;\n    } else {\n      return `Следующий игрок: ${currentPlayer}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: renderGameStatus()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u0421\\u0447\\u0451\\u0442: X - \", scores.X, \", O - \", scores.O]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      activeMiniBoard: activeMiniBoard,\n      finishedMiniBoards: finishedMiniBoards,\n      onSquareClick: handleSquareClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"wxigRYla/1Mvnu6cfD11MSQErLo=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","checkWinner","jsxDEV","_jsxDEV","Game","_s","board","setBoard","Array","fill","map","currentPlayer","setCurrentPlayer","activeMiniBoard","setActiveMiniBoard","finishedMiniBoards","setFinishedMiniBoards","scores","setScores","X","O","winner","setWinner","handleSquareClick","miniBoardIndex","squareIndex","includes","nextBoard","miniboard","mbIndex","value","sIndex","miniBoardWinner","prev","prevScores","nextActiveMiniBoard","overallWinner","renderGameStatus","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onSquareClick","_c","$RefreshReg$"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Game/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './Board';\nimport { checkWinner } from './helpers';\n\nexport function Game() {\n    const [board, setBoard] = useState(Array(9).fill(null).map(() => Array(9).fill(null)));\n    const [currentPlayer, setCurrentPlayer] = useState('X');\n    const [activeMiniBoard, setActiveMiniBoard] = useState(null);\n    const [finishedMiniBoards, setFinishedMiniBoards] = useState([]);\n    const [scores, setScores] = useState({ X: 0, O: 0 });\n    const [winner, setWinner] = useState(null);\n\n    const handleSquareClick = (miniBoardIndex, squareIndex) => {\n        if (winner) return\n\n        if (finishedMiniBoards.includes(miniBoardIndex)) {\n            if (activeMiniBoard !== null) return\n        }\n        const nextBoard = board.map((miniboard, mbIndex) => {\n                if (mbIndex !== miniBoardIndex) return miniboard\n            return miniboard.map((value, sIndex) => {\n            if (sIndex === squareIndex && value === null) return currentPlayer;\n            return value\n        })\n        })\n\n        setBoard(nextBoard);\n\n        // Проверка на победу в поле 3x3\n        const miniBoardWinner = checkWinner(nextBoard[miniBoardIndex])\n        if (miniBoardWinner) {\n            setFinishedMiniBoards((prev) => [...prev, miniBoardIndex])\n            setScores((prevScores) => ({\n                ...prevScores,\n                [currentPlayer]: prevScores[currentPlayer] + 1,\n            }));\n        }\n\n        const nextActiveMiniBoard = finishedMiniBoards.includes(squareIndex) ? null : squareIndex\n\n        setActiveMiniBoard(nextActiveMiniBoard);\n\n        setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n\n    };\n\n    useEffect(() => {\n        const overallWinner = checkWinner(finishedMiniBoards);\n        if (overallWinner){\n            setWinner(overallWinner);\n        }\n    }, [finishedMiniBoards])\n\n\n    const renderGameStatus = () => {\n    if (winner) {\n        return `Победитель: ${winner}`;\n    } else if(finishedMiniBoards.length === 9) {\n        return `Ничья`;\n    } else {\n        return `Следующий игрок: ${currentPlayer}`\n    }\n}\n\n    return (\n        <div>\n            <div>{renderGameStatus()}</div>\n            <div >Счёт: X - {scores.X}, O - {scores.O}</div>\n            <Board\n                board={board}\n                activeMiniBoard={activeMiniBoard}\n                finishedMiniBoards={finishedMiniBoards}\n                onSquareClick={handleSquareClick}\n            />\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}