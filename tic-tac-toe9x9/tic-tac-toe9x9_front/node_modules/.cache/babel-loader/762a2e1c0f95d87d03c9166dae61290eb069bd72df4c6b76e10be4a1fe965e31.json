{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx\";\nimport { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TopicDis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ID: \"\",\n      Title: \"\",\n      Content: \"\",\n      Author: \"\",\n      Error: \"\",\n      Loading: false,\n      CommentsList: []\n    };\n    this.updateData = () => {\n      const {\n        location\n      } = this.props;\n      console.log(location);\n      if (location && location.state) {\n        const {\n          id,\n          name,\n          content,\n          author\n        } = location.state;\n        this.setState({\n          ID: id,\n          Title: name,\n          Author: author,\n          Content: content\n        });\n      } else {\n        this.setState({\n          Error: \"Данные темы отсутствуют\"\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    this.updateData();\n    //this.fetchData()\n  }\n  /*    \n  fetchData = async () => {\n      //const Location = useLocation()\n      //const {id, name} = Location.state\n      \n      try {\n          const response = await fetch('https://api.example.com/text');\n          if (!response.ok) {\n              throw new Error(\"Ошибка загрузки данных\")\n          }\n          const result = await response.json()\n          this.setState({ \n              data: result, \n              loading: false,\n              id: id,\n              name: name\n          })\n      } \n      catch (error) {\n          this.setState({ \n              error: error.message, \n              loading: false \n          })\n      }\n      \n  }\n  */\n\n  render() {\n    const {\n      Text,\n      Loading,\n      Error,\n      Name,\n      CommentsList\n    } = this.state;\n    if (Loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    }\n    if (Error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", Error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        data: CommentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n/*\nimport React, { useState, useEffect } from \"react\";\n\nexport function TopicDis() {\n    const location = useLocation();\n    const [state, setState] = useState({\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    });\n\n    useEffect(() => {\n        //console.log(\"Location state:\", location.state); // Для отладки\n        if (location.state) {\n            const { id, name, content, author } = location.state;\n            setState((prevState) => ({\n                ...prevState,\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            }));\n        }\n    }, [location.state]);\n\n    const { Title, Content, Author, CommentsList, Loading, Error } = state;\n\n    if (Loading) return <p>Загрузка...</p>;\n    if (Error) return <p>Ошибка: {Error}</p>;\n\n    return (\n        <>\n            <h1>{Title}</h1>\n            <p>Автор: {Author}</p>\n            <div className=\"text\">{Content}</div>\n            <button>Добавить комментарий</button>\n            <Comments data={CommentsList} />\n        </>\n    );\n}\n\nexport default TopicDis;\n*/","map":{"version":3,"names":["Component","Comments","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicDis","constructor","args","state","ID","Title","Content","Author","Error","Loading","CommentsList","updateData","location","props","console","log","id","name","content","author","setState","componentDidMount","render","Text","Name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","data"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Comments } from \"./Comments\";\n\nexport class TopicDis extends Component {\n    state = {\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    }\n\n    componentDidMount() {\n        this.updateData()\n        //this.fetchData()\n    }\n\n    updateData = () => {\n        const { location } = this.props;\n        console.log(location)\n        if (location && location.state) {\n            const { id, name, content, author } = location.state;\n            this.setState({\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content,\n            });\n        } else {\n            this.setState({\n                Error: \"Данные темы отсутствуют\",\n            });\n        }\n    }\n\n    /*    \n    fetchData = async () => {\n        //const Location = useLocation()\n        //const {id, name} = Location.state\n        \n        try {\n            const response = await fetch('https://api.example.com/text');\n            if (!response.ok) {\n                throw new Error(\"Ошибка загрузки данных\")\n            }\n            const result = await response.json()\n            this.setState({ \n                data: result, \n                loading: false,\n                id: id,\n                name: name\n            })\n        } \n        catch (error) {\n            this.setState({ \n                error: error.message, \n                loading: false \n            })\n        }\n        \n    }\n    */\n\n    render() {\n        const {Text, Loading, Error, Name, CommentsList} = this.state;\n\n        if (Loading) {\n            return <p>Загрузка...</p>;\n        }\n\n        if (Error) {\n            return <p>Ошибка: {Error}</p>;\n        }\n\n        return (\n            <>\n                <h1>{Name}</h1>\n                <div className=\"text\">\n                    {Text}\n                </div>\n                <button>Добавить коментарий</button>\n                <Comments data={CommentsList}/>\n            </>\n        )\n    }\n}\n\n/*\nimport React, { useState, useEffect } from \"react\";\n\nexport function TopicDis() {\n    const location = useLocation();\n    const [state, setState] = useState({\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    });\n\n    useEffect(() => {\n        //console.log(\"Location state:\", location.state); // Для отладки\n        if (location.state) {\n            const { id, name, content, author } = location.state;\n            setState((prevState) => ({\n                ...prevState,\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            }));\n        }\n    }, [location.state]);\n\n    const { Title, Content, Author, CommentsList, Loading, Error } = state;\n\n    if (Loading) return <p>Загрузка...</p>;\n    if (Error) return <p>Ошибка: {Error}</p>;\n\n    return (\n        <>\n            <h1>{Title}</h1>\n            <p>Автор: {Author}</p>\n            <div className=\"text\">{Content}</div>\n            <button>Добавить комментарий</button>\n            <Comments data={CommentsList} />\n        </>\n    );\n}\n\nexport default TopicDis;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}