{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9---front/tic-tac-toe9x9/src/Game.jsx\";\nimport { Component } from \"react\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Square extends Component {\n  render() {\n    console.log('Rendering Square with value:', this.props.value);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: '60px',\n        height: '60px',\n        fontSize: '24px',\n        display: 'inline-block',\n        border: '1px solid black',\n        backgroundColor: 'white'\n      },\n      onClick: this.props.onClick,\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Board: Array(9).fill(null).map(() => ({\n        squares: Array(9).fill(null),\n        winner: null\n      })),\n      NextStep: true,\n      Scores: {\n        X: 0,\n        O: 0\n      }\n    };\n    this.IsEndGame = squares => {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n      for (let line of lines) {\n        const [a, b, c] = line;\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n        }\n      }\n      return null;\n    };\n    this.RenderSquare = (fieldIndex, index) => {\n      const field = this.state.Board[fieldIndex];\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: field.squares[index],\n        onClick: () => {\n          this.SClick(fieldIndex, index);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    };\n    this.RenderBoard = fieldIndex => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [this.RenderSquare(fieldIndex, 0), this.RenderSquare(fieldIndex, 1), this.RenderSquare(fieldIndex, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [this.RenderSquare(fieldIndex, 3), this.RenderSquare(fieldIndex, 4), this.RenderSquare(fieldIndex, 5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [this.RenderSquare(fieldIndex, 6), this.RenderSquare(fieldIndex, 7), this.RenderSquare(fieldIndex, 8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this);\n    };\n    this.SClick = (fieldIndex, index) => {\n      console.log(\"SClick invoked with index:\", index);\n      const {\n        Board\n      } = this.state;\n      const field = Board[fieldIndex];\n      if (field.squares[index] || field.winner) {\n        console.log(\"Игра закончена или клетка занята\");\n        return;\n      }\n      this.socket.emit('makeMove', {\n        fieldIndex,\n        index\n      });\n    };\n  }\n  componentDidMount() {\n    this.socket = io('http://localhost:4000');\n    this.socket.on('gameState', gameState => {\n      if (gameState && gameState.Board) {\n        this.setState({\n          Board: gameState.Board,\n          NextStep: gameState.NextStep,\n          Scores: gameState.Scores\n        });\n      } else {\n        console.error(\"Ошибка в обновлении состояния игры:\", gameState);\n      }\n    });\n    this.socket.on('gameOver', finalScores => {\n      alert(`Игра завершена! Победители X - ${finalScores.X} O - ${finalScores.O}`);\n    });\n  }\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n  render() {\n    const {\n      Scores,\n      NextStep,\n      Board\n    } = this.state;\n    const status = `Следующий ход: ${NextStep ? \"X\" : \"O\"}`;\n    const scoresText = Scores ? `Счёт: X - ${Scores.X}, O - ${Scores.O}` : `Загружается...`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: scoresText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gap: '10px'\n        },\n        children: Board.map((_, index) => this.RenderBoard(index))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport class Game extends Component {\n  //static contextType = AppContext\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field_position\",\n        children: [/*#__PURE__*/_jsxDEV(\"field\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"chat\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["Component","io","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","render","console","log","props","value","style","width","height","fontSize","display","border","backgroundColor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Board","constructor","args","state","Array","fill","map","squares","winner","NextStep","Scores","X","O","IsEndGame","lines","line","a","b","c","RenderSquare","fieldIndex","index","field","SClick","RenderBoard","flexDirection","socket","emit","componentDidMount","on","gameState","setState","error","finalScores","alert","componentWillUnmount","disconnect","status","scoresText","marginBottom","gridTemplateColumns","gap","_","Game","className","textAlign","marginTop"],"sources":["/home/RA/projects/tic-tac-toe9x9---front/tic-tac-toe9x9/src/Game.jsx"],"sourcesContent":["import { Component } from \"react\"\nimport io from 'socket.io-client'\n\nexport class Square extends Component {\n    render() {\n        console.log('Rendering Square with value:', this.props.value);\n        return (\n            <button\n            style={{\n                width: '60px',\n                height: '60px',\n                fontSize: '24px',\n                display: 'inline-block',\n                border: '1px solid black',\n                backgroundColor: 'white', \n            }} \n            onClick={this.props.onClick}>\n                {this.props.value}\n            </button>\n        )\n    }\n}\n\nexport class Board extends Component {\n    state = {\n        Board: Array(9).fill(null).map(() => ({squares: Array(9).fill(null), winner: null})),\n        NextStep: true,\n        Scores: {X: 0, O: 0}\n    }\n\n    componentDidMount() {\n        this.socket = io('http://localhost:4000')\n\n        this.socket.on('gameState', (gameState) => {\n            if (gameState && gameState.Board) {\n                this.setState({\n                    Board: gameState.Board,\n                    NextStep: gameState.NextStep,\n                    Scores: gameState.Scores\n                })\n            } else {\n                console.error(\"Ошибка в обновлении состояния игры:\", gameState);\n            }\n        })\n\n\n        this.socket.on('gameOver', (finalScores) => {\n            alert(`Игра завершена! Победители X - ${finalScores.X} O - ${finalScores.O}`)\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.socket) {\n            this.socket.disconnect()\n        }\n    }\n\n    IsEndGame = (squares) => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ]\n\n            for (let line of lines) {\n                const [a, b, c] = line\n                if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                    return squares[a]\n                }\n        }\n\n        return null\n    }\n\n    RenderSquare = (fieldIndex, index) => {\n        const field = this.state.Board[fieldIndex]\n        return (\n            <Square\n            value={field.squares[index]}\n            onClick={() => {this.SClick(fieldIndex, index)}}\n            />\n        )\n    }\n\n    RenderBoard = (fieldIndex) => {\n        return(\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <div style={{ display: 'flex' }}>\n                {this.RenderSquare(fieldIndex, 0)}\n                {this.RenderSquare(fieldIndex, 1)}\n                {this.RenderSquare(fieldIndex, 2)}\n            </div>\n            <div style={{ display: 'flex' }}>\n                {this.RenderSquare(fieldIndex, 3)}\n                {this.RenderSquare(fieldIndex, 4)}\n                {this.RenderSquare(fieldIndex, 5)}\n            </div>\n            <div style={{ display: 'flex' }}>\n                {this.RenderSquare(fieldIndex, 6)}\n                {this.RenderSquare(fieldIndex, 7)}\n                {this.RenderSquare(fieldIndex, 8)}\n            </div>\n            </div>\n        )\n    }\n\n    SClick = (fieldIndex, index) => {\n        console.log(\"SClick invoked with index:\", index);\n        const {Board} = this.state\n        const field = Board[fieldIndex]\n\n        if (field.squares[index] || field.winner) {\n            console.log(\"Игра закончена или клетка занята\");\n            return\n        }\n\n        this.socket.emit('makeMove', {fieldIndex, index})\n    }\n    render() {\n        const {Scores, NextStep, Board} = this.state\n        const status = `Следующий ход: ${NextStep ? \"X\" : \"O\"}`\n        const scoresText = Scores ? `Счёт: X - ${Scores.X}, O - ${Scores.O}` : `Загружается...`\n\n        return (\n            <div>\n            <div style={{ marginBottom: '10px' }}>{status}</div>\n            <div>{scoresText}</div>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '10px' }}>\n            {Board.map((_, index) => this.RenderBoard(index))}\n            </div>\n        </div>\n        )\n    }\n}\n\nexport class Game extends Component {\n    //static contextType = AppContext\n    render() {\n        return (\n            <>\n                <div className=\"field_position\">\n                <field style= {{\n                    textAlign: \"center\",\n                    marginTop: \"20px\"\n                }}></field>\n                <chat></chat>\n                </div>\n                <Board/>\n            </>\n        )\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}