{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/sign_in.jsx\";\nimport { Component } from \"react\";\nimport { AppContext } from \"./Context\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: \"\",\n      password: \"\",\n      showPasswordKey: false,\n      errorKey: null,\n      errorPlace: null,\n      SignInError: \"\"\n    };\n    this.UpdateData = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value,\n        errorKey: null\n      });\n    };\n    this.ShowPassword = () => {\n      this.setState({\n        showPasswordKey: !this.state.showPasswordKey\n      });\n    };\n    this.SignIn = async userData => {\n      const {\n        login,\n        setToken,\n        UserToken\n      } = this.context;\n      const jsonData = JSON.stringify(userData);\n      try {\n        const response = await fetch('http://localhost:9090/singIn', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: jsonData\n        });\n\n        //const token = response.headers.get(\"X-Jwt-Token\");\n        //console.log(\"token \" + token)\n\n        // Получение всех заголовков\n        //for (let [key, value] of response.headers.entries()) {\n        //console.log(`${key}: ${value}`);\n        //}\n        const result = await response.json();\n        if (result.error !== \"\") {\n          this.setState({\n            SignInError: result.error\n          });\n        } else {\n          this.setState({\n            SignInError: \"\"\n          });\n          login(result); // Функция для обновления контекста\n        }\n        console.log(\"Ответ от API:\", result);\n        console.log(UserToken);\n      } catch (error) {\n        console.error(\"Ошибка:\", error);\n      }\n    };\n    this.LogButtonClicked = async () => {\n      const {\n        login,\n        password\n      } = this.state;\n      if (login === \"\" || password === \"\") {\n        this.setState({\n          errorKey: 1,\n          SignInError: \"\"\n        });\n        return;\n      }\n      if (login.startsWith(\" \") === true || login.endsWith(\" \") === true) {\n        this.setState({\n          errorKey: 2,\n          errorPlace: \"логина\",\n          SignInError: \"\"\n        });\n        return;\n      }\n      if (password.startsWith(\" \") === true || password.endsWith(\" \") === true) {\n        this.setState({\n          errorKey: 2,\n          errorPlace: \"пароля\",\n          SignInError: \"\"\n        });\n        return;\n      }\n      const data = {\n        login: login,\n        password: password,\n        username: \"\",\n        win: 0,\n        lose: 0,\n        error: \"\"\n      };\n      await this.SignIn(data);\n      this.setState({\n        login: \"\",\n        password: \"\",\n        errorKey: 0,\n        errorPlace: 0\n      });\n    };\n  }\n  render() {\n    const {\n      login,\n      password,\n      showPasswordKey,\n      errorKey,\n      errorPlace,\n      SignInError\n    } = this.state;\n    if (this.context.UserIsLoged === true) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u043B\\u043E\\u0433\\u0438\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"login\",\n          value: login,\n          onChange: e => this.UpdateData(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPasswordKey ? \"text\" : \"password\",\n          name: \"password\",\n          value: password,\n          onChange: e => this.UpdateData(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.ShowPassword,\n          children: showPasswordKey ? \"Скрыть\" : \"Показать\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.LogButtonClicked,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0412\\u043F\\u0435\\u0440\\u0432\\u044B\\u0435 \\u0442\\u0443\\u0442? \\u0422\\u043E\\u0433\\u0434\\u0430 \\u043C\\u043E\\u0436\\u043D\\u043E \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/sign_up\",\n          children: \"\\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), errorKey === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0434\\u043D\\u043E \\u0438\\u043B\\u0438 \\u0431\\u043E\\u043B\\u0435\\u0435 \\u043F\\u043E\\u043B\\u0435\\u0439 \\u043F\\u0443\\u0441\\u0442\\u044B\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 65\n        }, this), \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u0443\\u0441\\u0442\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044F!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 36\n      }, this), errorKey === 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0412 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0435 \\u0438\\u043B\\u0438 \\u043A\\u043E\\u043D\\u0446\\u0435 \", errorPlace, \" \\u0435\\u0441\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u044B\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 83\n        }, this), \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u043D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0431\\u0435\\u0437 \\u043D\\u0438\\u0445!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 36\n      }, this), SignInError !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", SignInError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true);\n  }\n}\nSignIn.contextType = AppContext;","map":{"version":3,"names":["Component","AppContext","Link","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","constructor","args","state","login","password","showPasswordKey","errorKey","errorPlace","SignInError","UpdateData","e","name","value","target","setState","ShowPassword","userData","setToken","UserToken","context","jsonData","JSON","stringify","response","fetch","method","headers","body","result","json","error","console","log","LogButtonClicked","startsWith","endsWith","data","username","win","lose","render","UserIsLoged","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","onChange","type","onClick","contextType"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/sign_in.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { AppContext } from \"./Context\";\nimport { Link, Navigate } from \"react-router-dom\";\n\n\nexport class SignIn extends Component {\n    state = {\n        login: \"\",\n        password: \"\",\n        showPasswordKey: false,\n        errorKey: null,\n        errorPlace: null,\n        SignInError: \"\"\n    }\n\n    static contextType = AppContext\n\n    UpdateData = (e) => {\n        const { name, value } = e.target\n        this.setState({\n            [name]: value,\n            errorKey: null\n        })\n    }\n\n    ShowPassword = () => {\n        this.setState({\n            showPasswordKey: !this.state.showPasswordKey\n        })\n    }\n\n    SignIn = async (userData) => {\n        const {login, setToken, UserToken} = this.context\n        const jsonData = JSON.stringify(userData);\n        try {\n            const response = await fetch('http://localhost:9090/singIn', {\n                method: 'POST', \n                headers: {\n                    'Content-Type': 'application/json', \n                },\n                body: jsonData, \n            });\n\n            //const token = response.headers.get(\"X-Jwt-Token\");\n            //console.log(\"token \" + token)\n\n            // Получение всех заголовков\n            //for (let [key, value] of response.headers.entries()) {\n            //console.log(`${key}: ${value}`);\n        //}\n            const result = await response.json()\n            if (result.error !== \"\") {\n                this.setState({SignInError : result.error})\n            } else {\n                this.setState({SignInError: \"\"})\n                login(result) // Функция для обновления контекста\n            }\n            console.log(\"Ответ от API:\", result);\n            console.log(UserToken)\n\n            } catch (error) {\n                console.error(\"Ошибка:\", error);\n            }\n}            \n\n    LogButtonClicked = async () => {\n        const { login, password } = this.state\n\n        if (login === \"\" || password === \"\") {\n            this.setState({ errorKey: 1, SignInError: \"\" })\n            return\n        }\n\n        if (login.startsWith(\" \") === true || login.endsWith(\" \") === true) {\n            this.setState({ errorKey: 2, errorPlace: \"логина\", SignInError: \"\"})\n            return\n        }\n        if (password.startsWith(\" \") === true || password.endsWith(\" \") === true) {\n            this.setState({ errorKey: 2, errorPlace: \"пароля\", SignInError: \"\"})\n            return\n        }\n\n        const data = {\n            login: login,\n            password: password,\n            username: \"\",\n            win: 0,\n            lose: 0,\n            error: \"\"\n        }\n\n        await this.SignIn(data)\n\n        this.setState({\n            login: \"\",\n            password: \"\",\n            errorKey: 0,\n            errorPlace: 0\n        })\n    }\n\n    render() {\n        const { login, password, showPasswordKey, errorKey, errorPlace, SignInError } = this.state\n\n        if (this.context.UserIsLoged === true) {\n            return <Navigate to=\"/\" replace />\n        }\n\n        return (\n            <>\n                <label>Вход</label>\n                <div>\n                    <label>логин</label>\n                    <input name=\"login\" value={login} onChange={(e) => this.UpdateData(e)} />\n                </div>\n                <div>\n                    <label>пароль</label>\n                    <input type={showPasswordKey ? \"text\" : \"password\"} name=\"password\" value={password} onChange={(e) => this.UpdateData(e)} />\n                    <button onClick={this.ShowPassword}>{showPasswordKey ? \"Скрыть\" : \"Показать\"}</button>\n                </div>\n                <button onClick={this.LogButtonClicked}>Войти</button>\n                <p>Впервые тут? Тогда можно <Link to=\"/sign_up\">зарегистироваться</Link></p>\n                {errorKey === 1 && <p>Одно или более полей пусты<br></br>\n                    Пожалуйста, заполните пустые поля!</p>}\n                {errorKey === 2 && <p>В начале или конце {errorPlace} есть пробелы<br></br>\n                    Пожалуйста, напишите без них!</p>}\n                {SignInError !== \"\" && <p>Ошибка: {SignInError}</p>}\n            </>\n        )\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}