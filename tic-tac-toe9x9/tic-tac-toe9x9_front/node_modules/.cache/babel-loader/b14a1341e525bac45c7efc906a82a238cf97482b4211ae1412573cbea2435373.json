{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx\",\n  _s = $RefreshSig$();\n//import { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { useLocation } from \"react-router-dom\";\n\n/*\nexport function TopicDisPage() {\n    const location = useLocation();\n    const state = location.state\n    return <TopicDis location={state} />;\n}\n\nexport class TopicDis extends Component {\n    state = {\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    }\n\n    componentDidMount() {\n        this.updateData()\n        //this.fetchData()\n    }\n\n    updateData = () => {\n            const {location} = this.props\n            const {id, name, content, author} = location\n            this.setState({\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            })\n        }\n    fetchData = async () => {\n        //const Location = useLocation()\n        //const {id, name} = Location.state\n        \n        try {\n            const response = await fetch('https://api.example.com/text');\n            if (!response.ok) {\n                throw new Error(\"Ошибка загрузки данных\")\n            }\n            const result = await response.json()\n            this.setState({ \n                data: result, \n                loading: false,\n                id: id,\n                name: name\n            })\n        } \n        catch (error) {\n            this.setState({ \n                error: error.message, \n                loading: false \n            })\n        }\n        \n    }\n    \n\n    render() {\n        const {Text, Loading, Error, Name, CommentsList} = this.state;\n\n        if (Loading) {\n            return <p>Загрузка...</p>;\n        }\n\n        if (Error) {\n            return <p>Ошибка: {Error}</p>;\n        }\n\n        return (\n            <>\n                <h1>{Name}</h1>\n                <div className=\"text\">\n                    {Text}\n                </div>\n                <button>Добавить коментарий</button>\n                <Comments data={CommentsList}/>\n            </>\n        )\n    }\n}\n*/\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TopicDis() {\n  _s();\n  const location = useLocation();\n  const [state, setState] = useState({\n    ID: \"\",\n    Title: \"\",\n    Content: \"\",\n    Author: \"\",\n    Error: \"\",\n    Loading: false,\n    CommentsList: []\n  });\n  useEffect(() => {\n    //console.log(\"Location state:\", location.state); // Для отладки\n    if (location.state) {\n      const {\n        id,\n        name,\n        content,\n        author\n      } = location.state;\n      setState(prevState => ({\n        ...prevState,\n        ID: id,\n        Title: name,\n        Author: author,\n        Content: content\n      }));\n    }\n  }, [location.state]);\n  const {\n    Title,\n    Content,\n    Author,\n    CommentsList,\n    Loading,\n    Error\n  } = state;\n  if (Loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 25\n  }, this);\n  if (Error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", Error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0410\\u0432\\u0442\\u043E\\u0440: \", Author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: Content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      data: CommentsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TopicDis, \"Rg5uAjfZDq1rmcHs3rm9p3bvbhc=\", false, function () {\n  return [useLocation];\n});\n_c = TopicDis;\nexport default TopicDis;\nvar _c;\n$RefreshReg$(_c, \"TopicDis\");","map":{"version":3,"names":["Comments","useLocation","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicDis","_s","location","state","setState","ID","Title","Content","Author","Error","Loading","CommentsList","id","name","content","author","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","className","data","_c","$RefreshReg$"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx"],"sourcesContent":["//import { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { useLocation } from \"react-router-dom\";\n\n/*\nexport function TopicDisPage() {\n    const location = useLocation();\n    const state = location.state\n    return <TopicDis location={state} />;\n}\n\nexport class TopicDis extends Component {\n    state = {\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    }\n\n    componentDidMount() {\n        this.updateData()\n        //this.fetchData()\n    }\n\n    updateData = () => {\n            const {location} = this.props\n            const {id, name, content, author} = location\n            this.setState({\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            })\n        }\n    fetchData = async () => {\n        //const Location = useLocation()\n        //const {id, name} = Location.state\n        \n        try {\n            const response = await fetch('https://api.example.com/text');\n            if (!response.ok) {\n                throw new Error(\"Ошибка загрузки данных\")\n            }\n            const result = await response.json()\n            this.setState({ \n                data: result, \n                loading: false,\n                id: id,\n                name: name\n            })\n        } \n        catch (error) {\n            this.setState({ \n                error: error.message, \n                loading: false \n            })\n        }\n        \n    }\n    \n\n    render() {\n        const {Text, Loading, Error, Name, CommentsList} = this.state;\n\n        if (Loading) {\n            return <p>Загрузка...</p>;\n        }\n\n        if (Error) {\n            return <p>Ошибка: {Error}</p>;\n        }\n\n        return (\n            <>\n                <h1>{Name}</h1>\n                <div className=\"text\">\n                    {Text}\n                </div>\n                <button>Добавить коментарий</button>\n                <Comments data={CommentsList}/>\n            </>\n        )\n    }\n}\n*/\nimport React, { useState, useEffect } from \"react\";\n\nexport function TopicDis() {\n    const location = useLocation();\n    const [state, setState] = useState({\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    });\n\n    useEffect(() => {\n        //console.log(\"Location state:\", location.state); // Для отладки\n        if (location.state) {\n            const { id, name, content, author } = location.state;\n            setState((prevState) => ({\n                ...prevState,\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            }));\n        }\n    }, [location.state]);\n\n    const { Title, Content, Author, CommentsList, Loading, Error } = state;\n\n    if (Loading) return <p>Загрузка...</p>;\n    if (Error) return <p>Ошибка: {Error}</p>;\n\n    return (\n        <>\n            <h1>{Title}</h1>\n            <p>Автор: {Author}</p>\n            <div className=\"text\">{Content}</div>\n            <button>Добавить комментарий</button>\n            <Comments data={CommentsList} />\n        </>\n    );\n}\n\nexport default TopicDis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}