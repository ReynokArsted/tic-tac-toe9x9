{"ast":null,"code":"var _jsxFileName = \"/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx\",\n  _s = $RefreshSig$();\nimport { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TopicDisPage() {\n  _s();\n  const location = useLocation();\n  const state = location.state;\n  return /*#__PURE__*/_jsxDEV(TopicDis, {\n    location: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_s(TopicDisPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = TopicDisPage;\nexport class TopicDis extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ID: \"\",\n      Title: \"\",\n      Content: \"\",\n      Author: \"\",\n      Error: \"\",\n      Loading: false,\n      CommentsList: []\n    };\n    this.updateData = () => {\n      const {\n        location\n      } = this.props;\n      const {\n        id,\n        name,\n        content,\n        author\n      } = location;\n      this.setState({\n        ID: id,\n        Title: name,\n        Author: author,\n        Content: content\n      });\n    };\n  }\n  componentDidMount() {\n    this.updateData();\n    //this.fetchData()\n  }\n  /*    \n  fetchData = async () => {\n      //const Location = useLocation()\n      //const {id, name} = Location.state\n      \n      try {\n          const response = await fetch('https://api.example.com/text');\n          if (!response.ok) {\n              throw new Error(\"Ошибка загрузки данных\")\n          }\n          const result = await response.json()\n          this.setState({ \n              data: result, \n              loading: false,\n              id: id,\n              name: name\n          })\n      } \n      catch (error) {\n          this.setState({ \n              error: error.message, \n              loading: false \n          })\n      }\n      \n  }\n  */\n\n  render() {\n    const {\n      Text,\n      Loading,\n      Error,\n      Name,\n      CommentsList\n    } = this.state;\n    if (Loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    }\n    if (Error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", Error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: Name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Comments, {\n        data: CommentsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n/*\nimport React, { useState, useEffect } from \"react\";\n\nexport function TopicDis() {\n    const location = useLocation();\n    const [state, setState] = useState({\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    });\n\n    useEffect(() => {\n        //console.log(\"Location state:\", location.state); // Для отладки\n        if (location.state) {\n            const { id, name, content, author } = location.state;\n            setState((prevState) => ({\n                ...prevState,\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            }));\n        }\n    }, [location.state]);\n\n    const { Title, Content, Author, CommentsList, Loading, Error } = state;\n\n    if (Loading) return <p>Загрузка...</p>;\n    if (Error) return <p>Ошибка: {Error}</p>;\n\n    return (\n        <>\n            <h1>{Title}</h1>\n            <p>Автор: {Author}</p>\n            <div className=\"text\">{Content}</div>\n            <button>Добавить комментарий</button>\n            <Comments data={CommentsList} />\n        </>\n    );\n}\n\nexport default TopicDis;\n*/\nvar _c;\n$RefreshReg$(_c, \"TopicDisPage\");","map":{"version":3,"names":["Component","Comments","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicDisPage","_s","location","state","TopicDis","fileName","_jsxFileName","lineNumber","columnNumber","_c","constructor","args","ID","Title","Content","Author","Error","Loading","CommentsList","updateData","props","id","name","content","author","setState","componentDidMount","render","Text","Name","children","className","data","$RefreshReg$"],"sources":["/home/RA/projects/tic-tac-toe9x9_project/tic-tac-toe9x9/tic-tac-toe9x9_front/src/Forum/TopicDis.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Comments } from \"./Comments\";\nimport { useLocation } from \"react-router-dom\";\n\n\nexport function TopicDisPage() {\n    const location = useLocation();\n    const state = location.state\n    return <TopicDis location={state} />;\n}\n\nexport class TopicDis extends Component {\n    state = {\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    }\n\n    componentDidMount() {\n        this.updateData()\n        //this.fetchData()\n    }\n\n    updateData = () => {\n            const {location} = this.props\n            const {id, name, content, author} = location\n            this.setState({\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            })\n        }\n\n    /*    \n    fetchData = async () => {\n        //const Location = useLocation()\n        //const {id, name} = Location.state\n        \n        try {\n            const response = await fetch('https://api.example.com/text');\n            if (!response.ok) {\n                throw new Error(\"Ошибка загрузки данных\")\n            }\n            const result = await response.json()\n            this.setState({ \n                data: result, \n                loading: false,\n                id: id,\n                name: name\n            })\n        } \n        catch (error) {\n            this.setState({ \n                error: error.message, \n                loading: false \n            })\n        }\n        \n    }\n    */\n\n    render() {\n        const {Text, Loading, Error, Name, CommentsList} = this.state;\n\n        if (Loading) {\n            return <p>Загрузка...</p>;\n        }\n\n        if (Error) {\n            return <p>Ошибка: {Error}</p>;\n        }\n\n        return (\n            <>\n                <h1>{Name}</h1>\n                <div className=\"text\">\n                    {Text}\n                </div>\n                <button>Добавить коментарий</button>\n                <Comments data={CommentsList}/>\n            </>\n        )\n    }\n}\n\n/*\nimport React, { useState, useEffect } from \"react\";\n\nexport function TopicDis() {\n    const location = useLocation();\n    const [state, setState] = useState({\n        ID: \"\",\n        Title: \"\",\n        Content: \"\",\n        Author: \"\",\n        Error: \"\",\n        Loading: false,\n        CommentsList: []\n    });\n\n    useEffect(() => {\n        //console.log(\"Location state:\", location.state); // Для отладки\n        if (location.state) {\n            const { id, name, content, author } = location.state;\n            setState((prevState) => ({\n                ...prevState,\n                ID: id,\n                Title: name,\n                Author: author,\n                Content: content\n            }));\n        }\n    }, [location.state]);\n\n    const { Title, Content, Author, CommentsList, Loading, Error } = state;\n\n    if (Loading) return <p>Загрузка...</p>;\n    if (Error) return <p>Ошибка: {Error}</p>;\n\n    return (\n        <>\n            <h1>{Title}</h1>\n            <p>Автор: {Author}</p>\n            <div className=\"text\">{Content}</div>\n            <button>Добавить комментарий</button>\n            <Comments data={CommentsList} />\n        </>\n    );\n}\n\nexport default TopicDis;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}